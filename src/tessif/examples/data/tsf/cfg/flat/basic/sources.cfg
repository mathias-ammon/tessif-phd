# each source is denoted by its own section aka '[SECTION]'
[gas_station]
'name'='Gas Station'
'outputs'=('fuel',)
# Minimum number of arguments required
'latitude'=42
'longitude'=42
'region'='Here'
'sector'='Power'
'carrier'='Gas'
'node_type'='source'

# linear optimization problem parameters
'accumulated_amounts'={'fuel': (0, '+inf')}
# 'flow_rates'={'fuel': nts.MinMax(min=0, max=22)}
'flow_rates'={'fuel': (0, 100)}
'flow_costs'={'fuel': 10}
'flow_emissions'={'fuel': 3}
# 'flow_gradients'={'fuel': nts.PositiveNegative(positive=42, negative=42)}
'flow_gradients'={'fuel': (100, 100)}
# 'gradient_costs'={'fuel': nts.PositiveNegative(positive=1, negative=1)}
'gradient_costs'={'fuel': (0, 0)}
# 'timeseries'={'fuel': nts.MinMax(min=0, max=np.array([10, 22, 22]))}
'timeseries'= None

# expansion problem parameters
'expandable'={'fuel': False}
'expansion_costs'={'fuel': 5}
# 'expansion_limits'={'fuel': nts.MinMax(min=0, max=float('+inf'))}
'expansion_limits'={'fuel': (0, '+inf')}

# mixed integer linear problem parameters
'milp'={'fuel': False}
'initial_status'=True
# 'status_inertia'=nts.OnOff(on=1, off=1)
'status_inertia'=(1, 1)
# 'status_changing_costs'=nts.OnOff(on=0, off=0)
'status_changing_costs'=(0, 0)
#'number_of_status_changes'=nts.OnOff(on=float('+inf'), off=10)
'number_of_status_changes'=('+inf', 10)
'costs_for_being_active'=0.5

# Total number of arguments to specify source object

[solar_panel]
'name'='Solar Panel'
'outputs'=('electricity',)
# Minimum number of arguments required
'latitude'=42
'longitude'=42
'region'='Here'
'sector'='Power'
'carrier'='Electricity'
'node_type'='Renewable'
'accumulated_amounts'= {'electricity': (0, '+inf')}
'flow_rates'={'electricity': (20, 20)}
'flow_costs'={'electricity': 0}
'flow_emissions'={'electricity': 0}
'flow_gradients'={'electricity': (42, 42)}
'gradient_costs'={'electricity': (0, 0)}
'timeseries'={'electricity': ([12, 3, 7], [12, 3, 7])}
'expandable'={'electricity': False}
'expansion_costs'={'electricity': 5}
'expansion_limits'={'electricity': (0, '+inf')}
'milp'={'electricity': False}
'initial_status'=True
'status_inertia' = (1, 1)
'status_changing_costs'=(0, 0)
'number_of_status_changes'=('+inf', 10)
'costs_for_being_active'= 0
# Total number of arguments to specify source object

[air]
'name'='Air'
'outputs'=('air',)
