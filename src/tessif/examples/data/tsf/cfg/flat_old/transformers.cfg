[my_transformer]
'name'='Generator'
'inputs'=('fuel',)
'outputs'=('electricity',)
'conversions'={('fuel', 'electricity'): 0.42}
# Minimum number of arguments required
'latitude'=42
'longitude'=42
'region'='Here'
'sector'='Power'
'carrier'='Force'
'node_type'='hub'
'flow_rates'={
    'fuel': nts.MinMax(min=0, max=50),
    'electricity': nts.MinMax(min=5, max=15)}
'flow_costs'={'fuel': 0, 'electricity': 0}
'flow_emissions'={'fuel': 0, 'electricity': 0}
'flow_gradients'={
    'fuel': nts.PositiveNegative(positive=50, negative=50),
    'electricity': nts.PositiveNegative(positive=10, negative=10)}
'gradient_costs'={
    'fuel': nts.PositiveNegative(positive=0, negative=0),
    'electricity': nts.PositiveNegative(positive=0, negative=0)}
'timeseries'={'electricity': nts.MinMax(min=0, max=np.array([10, 22, 22]))}
'expandable'={'fuel': False, 'electricity': False}
'expansion_costs'={'fuel': 0, 'electricity': 0}
'expansion_limits'={
    'fuel': nts.MinMax(min=0, max=float('+inf')),
    'electricity': nts.MinMax(min=0, max=float('+inf'))}
'initial_status'=True
'status_inertia'=nts.OnOff(on=0, off=2)
'status_changing_costs'=nts.OnOff(on=0, off=0)
'number_of_status_changes'=nts.OnOff(on=float('+inf'), off=9)
'costs_for_being_active'=0
# Total number of arguments to specify transformer object
